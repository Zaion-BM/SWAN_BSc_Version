[
    {
        id 6d59f1a.522131,
        type tab,
        label SWAN SERVER
    },
    {
        id 9f06d6cf.0f4e88,
        type mqtt in,
        z 6d59f1a.522131,
        name ,
        topic SWANpub,
        qos 2,
        broker 2fd62e77.0339c2,
        x 227.51251983642578,
        y 179.33749866485596,
        wires [
            [
                a1d3fe8f.8ebaf
            ]
        ]
    },
    {
        id 8bed1c18.49a33,
        type mqtt out,
        z 6d59f1a.522131,
        name ,
        topic SWANrecv,
        qos 1,
        retain false,
        broker 28a5b569.d77cba,
        x 722.5062255859375,
        y 625.1937255859375,
        wires []
    },
    {
        id eaddb61c.071e78,
        type function,
        z 6d59f1a.522131,
        name Irrigation ban control,
        func if (msg.payload === true){n    msg.payload = banned;n}nelse {n    msg.payload = enabled;n}nnreturn msg;,
        outputs 1,
        noerr 0,
        x 528,
        y 590,
        wires [
            [
                8bed1c18.49a33,
                a661d9ad.96fbb8
            ]
        ]
    },
    {
        id a1d3fe8f.8ebaf,
        type json,
        z 6d59f1a.522131,
        name ,
        x 406.0000228881836,
        y 175.00000476837158,
        wires [
            [
                763a9912.36eb48
            ]
        ]
    },
    {
        id ae71a16c.27909,
        type sqlite,
        z 6d59f1a.522131,
        mydb ba3e9611.084d58,
        name Insert to table,
        x 1016.0000381469727,
        y 112.00001049041748,
        wires [
            [
                62ed1138.d3cac
            ]
        ]
    },
    {
        id 62ed1138.d3cac,
        type debug,
        z 6d59f1a.522131,
        name ,
        active true,
        console false,
        complete false,
        x 1187.0000381469727,
        y 114.00001049041748,
        wires []
    },
    {
        id 60c050d.4ebedb,
        type function,
        z 6d59f1a.522131,
        name SQL statement,
        func var topic =  INSERT INTO SWAN (ID,moisture,temperature,pressure,status,battery) VALUES ('+msg.payload[0]+','+msg.payload[1]+','+msg.payload[2]+','+msg.payload[3]+','+msg.payload[4]+','+msg.payload[5]+');nvar newmsg={}nnewmsg.topic = topic;nreturn newmsg;,
        outputs 1,
        noerr 0,
        x 829.0000228881836,
        y 110.00000476837158,
        wires [
            [
                ae71a16c.27909
            ]
        ]
    },
    {
        id 6b913cb9.7caf74,
        type function,
        z 6d59f1a.522131,
        name BuzzerControl,
        func if (msg.payload === true){n    msg.payload = lost;n}nelse {n    msg.payload = found;n}nnreturn msg;,
        outputs 1,
        noerr 0,
        x 1260.4875411987305,
        y 594.225004196167,
        wires [
            [
                530ed1bd.e06dd,
                11c18dc3.34dbd2
            ]
        ]
    },
    {
        id 763a9912.36eb48,
        type function,
        z 6d59f1a.522131,
        name Parse JSON,
        func var avgtemp;nvar avgmoist;nvar avgpres;nvar status= msg.payload.status;nvar id=msg.payload.Client;nvar battery = msg.payload.Battery_Voltage;nnavgtemp = (msg.payload.temp[0]+msg.payload.temp[1]+msg.payload.temp[2]+msg.payload.temp[3]+msg.payload.temp[4])5;navgpres = (msg.payload.pressure[0]+msg.payload.pressure[1]+msg.payload.pressure[2]+msg.payload.pressure[3]+msg.payload.pressure[4])5;navgmoist = (msg.payload.U_moisture[0]+msg.payload.U_moisture[1]+msg.payload.U_moisture[2]+msg.payload.U_moisture[3]+msg.payload.U_moisture[4])5;nnntemp = avgtemp.toFixed(2);npres = avgpres.toFixed(2);nmoist = avgmoist.toFixed(2);nnvar data = {payload [id,moist,temp,pres,status,battery]};nnreturn data;,
        outputs 1,
        noerr 0,
        x 560.0000228881836,
        y 179.00000476837158,
        wires [
            [
                60c050d.4ebedb,
                2269c0e3.3a41f,
                5b749fcb.7c33,
                46115a7e.d26234,
                44c871d1.ea296
            ]
        ]
    },
    {
        id 39c7b78f.20f178,
        type ui_chart,
        z 6d59f1a.522131,
        name ,
        group 13e6c784.070128,
        order 0,
        width 0,
        height 0,
        label Ambient temperature [Â°C],
        chartType line,
        legend true,
        xformat HHmmss,
        interpolate linear,
        nodata ,
        ymin ,
        ymax ,
        removeOlder 1,
        removeOlderPoints ,
        removeOlderUnit 86400,
        cutout 0,
        colors [
            #1f77b4,
            #aec7e8,
            #ff7f0e,
            #2ca02c,
            #98df8a,
            #d62728,
            #ff9896,
            #9467bd,
            #c5b0d5
        ],
        x 1093.3483505249023,
        y 239.72284412384033,
        wires [
            [],
            []
        ]
    },
    {
        id 9305274c.150d38,
        type ui_chart,
        z 6d59f1a.522131,
        name ,
        group 3ae508d0.221808,
        order 0,
        width 0,
        height 0,
        label Pressure [hPa],
        chartType line,
        legend true,
        xformat HHmmss,
        interpolate linear,
        nodata ,
        ymin ,
        ymax ,
        removeOlder 1,
        removeOlderPoints ,
        removeOlderUnit 86400,
        cutout 0,
        colors [
            #1f77b4,
            #aec7e8,
            #ff7f0e,
            #2ca02c,
            #98df8a,
            #d62728,
            #ff9896,
            #9467bd,
            #c5b0d5
        ],
        x 1097.2257919311523,
        y 287.26987171173096,
        wires [
            [],
            []
        ]
    },
    {
        id c2b154d1.247148,
        type ui_chart,
        z 6d59f1a.522131,
        name ,
        group f3ee1910.217358,
        order 0,
        width 0,
        height 0,
        label Status,
        chartType line,
        legend true,
        xformat HHmmss,
        interpolate linear,
        nodata ,
        ymin ,
        ymax ,
        removeOlder 1,
        removeOlderPoints ,
        removeOlderUnit 86400,
        cutout 0,
        colors [
            #1f77b4,
            #aec7e8,
            #ff7f0e,
            #2ca02c,
            #98df8a,
            #d62728,
            #ff9896,
            #9467bd,
            #c5b0d5
        ],
        x 1106.2315292358398,
        y 340.26987171173096,
        wires [
            [],
            []
        ]
    },
    {
        id 2269c0e3.3a41f,
        type function,
        z 6d59f1a.522131,
        name Generate Temperature Chart Data,
        func var msg1 = { payloadmsg.payload[2], topicmsg.payload[0] };nnreturn msg1;,
        outputs 1,
        noerr 0,
        x 874.4587631225586,
        y 229.0056505203247,
        wires [
            [
                39c7b78f.20f178
            ]
        ]
    },
    {
        id 5b749fcb.7c33,
        type function,
        z 6d59f1a.522131,
        name Generate Pressure Chart Data,
        func var msg1 = { payloadmsg.payload[3], topicmsg.payload[0] };nnreturn msg1;,
        outputs 1,
        noerr 0,
        x 872.4587631225586,
        y 290.0056505203247,
        wires [
            [
                9305274c.150d38
            ]
        ]
    },
    {
        id 46115a7e.d26234,
        type function,
        z 6d59f1a.522131,
        name Generate Status Chart Data,
        func var msg1 = { payloadmsg.payload[4], topicmsg.payload[0] };nnreturn msg1;,
        outputs 1,
        noerr 0,
        x 852.4587631225586,
        y 341.0056505203247,
        wires [
            [
                c2b154d1.247148
            ]
        ]
    },
    {
        id db0afbca.9f7698,
        type mqtt in,
        z 6d59f1a.522131,
        name ,
        topic SWANserial,
        qos 2,
        broker 2fd62e77.0339c2,
        x 220.18183135986328,
        y 738.4545907974243,
        wires [
            [
                88fa1667.fde628
            ]
        ]
    },
    {
        id 88fa1667.fde628,
        type function,
        z 6d59f1a.522131,
        name Process,
        func msg.payload = parseInt(msg.payload);nnreturn msg;,
        outputs 1,
        noerr 0,
        x 385.18182373046875,
        y 734.4545736312866,
        wires [
            [
                f9c12a43.ea48f8,
                bb8bc0b6.c2301
            ]
        ]
    },
    {
        id f9c12a43.ea48f8,
        type function,
        z 6d59f1a.522131,
        name SQL statement,
        func var topic = SELECT MAX(key) AS maxkey FROM serialnumbers;nnvar newmsg={}nnewmsg.topic = topic;nreturn newmsg;,
        outputs 1,
        noerr 0,
        x 576.4545288085938,
        y 725.8182210922241,
        wires [
            [
                9574eb02.d4fcd8
            ]
        ]
    },
    {
        id 29271837.bcedd8,
        type mqtt out,
        z 6d59f1a.522131,
        name ,
        topic SWANrecv,
        qos 1,
        retain false,
        broker 28a5b569.d77cba,
        x 1082.858512878418,
        y 878.9495077133179,
        wires []
    },
    {
        id 9574eb02.d4fcd8,
        type sqlite,
        z 6d59f1a.522131,
        mydb ba3e9611.084d58,
        name Select from serialnumbers table,
        x 818.727294921875,
        y 726.0000448226929,
        wires [
            [
                57683d24.d87694,
                3619ef85.5df79
            ]
        ]
    },
    {
        id 57683d24.d87694,
        type function,
        z 6d59f1a.522131,
        name Calculate new serialnumber,
        func if (msg.payload[0].maxkey === null){n    msg.payload = 1;}nelse{msg.payload = msg.payload[0].maxkey + 1 };nnnnreturn msg;,
        outputs 1,
        noerr 0,
        x 829.7070922851562,
        y 806.8889303207397,
        wires [
            [
                bb8bc0b6.c2301
            ]
        ]
    },
    {
        id 85a96246.ffceb,
        type debug,
        z 6d59f1a.522131,
        name ,
        active true,
        console false,
        complete false,
        x 1078.8180694580078,
        y 820.2222127914429,
        wires []
    },
    {
        id bb8bc0b6.c2301,
        type join,
        z 6d59f1a.522131,
        name ,
        mode custom,
        build array,
        property payload,
        propertyType msg,
        key topic,
        joiner n,
        timeout ,
        count 2,
        x 769.9191932678223,
        y 874.0405583381653,
        wires [
            [
                48539478.3ecb9c
            ]
        ]
    },
    {
        id 48539478.3ecb9c,
        type function,
        z 6d59f1a.522131,
        name Join strings,
        func msg.payload = msg.payload[0].toString() + , + msg.payload[1].toString();nnreturn msg;,
        outputs 1,
        noerr 0,
        x 914.1268539428711,
        y 882.2285289764404,
        wires [
            [
                85a96246.ffceb,
                29271837.bcedd8
            ]
        ]
    },
    {
        id 5399908d.3f64b,
        type sqlite,
        z 6d59f1a.522131,
        mydb ba3e9611.084d58,
        name Insert to table,
        x 1263.5712890625,
        y 729.4709310531616,
        wires [
            [
                6a10b5fd.af300c
            ]
        ]
    },
    {
        id 3619ef85.5df79,
        type function,
        z 6d59f1a.522131,
        name SQL statement,
        func var tempnum = msg.payload[0].maxkey+1;nserialnumber = tempnum.toString();nnnvar topic =  INSERT INTO SERIALNUMBERS (key) VALUES ('+serialnumber+');nvar newmsg={}nnewmsg.topic = topic;nreturn newmsg;,
        outputs 1,
        noerr 0,
        x 1080.0157470703125,
        y 728.4709920883179,
        wires [
            [
                5399908d.3f64b
            ]
        ]
    },
    {
        id 6a10b5fd.af300c,
        type debug,
        z 6d59f1a.522131,
        name ,
        active true,
        console false,
        complete false,
        x 1267.9552001953125,
        y 776.3598470687866,
        wires []
    },
    {
        id 6ea42686.ec83b8,
        type function,
        z 6d59f1a.522131,
        name SQL statement,
        func var topic = SELECT  FROM SWAN ORDER BY primkey DESC;nnvar newmsg={}nnewmsg.topic = topic;nreturn newmsg;,
        outputs 1,
        noerr 0,
        x 389,
        y 456,
        wires [
            [
                6f152052.432d1
            ]
        ]
    },
    {
        id 6f152052.432d1,
        type sqlite,
        z 6d59f1a.522131,
        mydb ba3e9611.084d58,
        name Select from SWAN,
        x 591.2727661132812,
        y 456.18182373046875,
        wires [
            [
                6282c440.f1b55c,
                ab6035e7.3d6ba8
            ]
        ]
    },
    {
        id ed47d5da.005fb8,
        type inject,
        z 6d59f1a.522131,
        name ,
        topic ,
        payload ,
        payloadType date,
        repeat 60,
        crontab ,
        once false,
        x 221,
        y 458,
        wires [
            [
                6ea42686.ec83b8
            ]
        ]
    },
    {
        id 6282c440.f1b55c,
        type debug,
        z 6d59f1a.522131,
        name ,
        active false,
        console false,
        complete false,
        x 779,
        y 428,
        wires []
    },
    {
        id 626c28e3.8a00a8,
        type ui_switch,
        z 6d59f1a.522131,
        name Ban,
        label Ban irrigtaion,
        group dafef2b4.2f5c4,
        order 0,
        width 0,
        height 0,
        passthru true,
        decouple false,
        topic switch,
        style ,
        onvalue true,
        onvalueType bool,
        onicon ,
        oncolor ,
        offvalue false,
        offvalueType bool,
        officon ,
        offcolor ,
        x 198,
        y 573,
        wires [
            [
                53d1c218.9f0e9c
            ]
        ]
    },
    {
        id ad0a5883.57f108,
        type mqtt in,
        z 6d59f1a.522131,
        name ,
        topic SWANpub,
        qos 2,
        broker 2fd62e77.0339c2,
        x 188,
        y 618,
        wires [
            [
                53d1c218.9f0e9c
            ]
        ]
    },
    {
        id a661d9ad.96fbb8,
        type debug,
        z 6d59f1a.522131,
        name ,
        active true,
        console false,
        complete false,
        x 721,
        y 556,
        wires []
    },
    {
        id 11c18dc3.34dbd2,
        type mqtt out,
        z 6d59f1a.522131,
        name ,
        topic SWANrecv,
        qos 1,
        retain false,
        broker 28a5b569.d77cba,
        x 1433.506248474121,
        y 627.0000286102295,
        wires []
    },
    {
        id a310e604.f4d7b8,
        type ui_switch,
        z 6d59f1a.522131,
        name Buzzer,
        label Find nodes,
        group dafef2b4.2f5c4,
        order 0,
        width 0,
        height 0,
        passthru true,
        decouple false,
        topic switch,
        style ,
        onvalue true,
        onvalueType bool,
        onicon ,
        oncolor ,
        offvalue false,
        offvalueType bool,
        officon ,
        offcolor ,
        x 924.0000228881836,
        y 569.806303024292,
        wires [
            [
                662c0a65.7369a4
            ]
        ]
    },
    {
        id df253c19.fb214,
        type mqtt in,
        z 6d59f1a.522131,
        name ,
        topic SWANpub,
        qos 2,
        broker 2fd62e77.0339c2,
        x 925.0000267028809,
        y 613.8063049316406,
        wires [
            [
                662c0a65.7369a4
            ]
        ]
    },
    {
        id 530ed1bd.e06dd,
        type debug,
        z 6d59f1a.522131,
        name ,
        active true,
        console false,
        complete false,
        x 1432.0000228881836,
        y 561.806303024292,
        wires []
    },
    {
        id ab6035e7.3d6ba8,
        type ui_template,
        z 6d59f1a.522131,
        group 47a2bc87.45d204,
        name ,
        order 0,
        width 0,
        height 0,
        format table style=width100%n  trn    thIDth n    thMoisture Voltage [V]thn    thTemperature [Â°C]th n    thPressure [hPa]thn    thStatusthn    thTimestampthn  trn  tr ng-repeat=x in msg.payload  limitTo1000n    td{{msg.payload[$index].id}}tdn    td{{msg.payload[$index].moisture}}td n    td{{msg.payload[$index].temperature}}tdn    td{{msg.payload[$index].pressure}}tdn    td{{msg.payload[$index].status}}tdn    td{{msg.payload[$index].timestamp}}tdn  trntable,
        storeOutMessages true,
        fwdInMessages true,
        x 786,
        y 474,
        wires [
            []
        ]
    },
    {
        id 6f57a2c5.66045c,
        type inject,
        z 6d59f1a.522131,
        name ,
        topic DELETE FROM SWAN WHERE TIMESTAMP = strftime('%s','now', '-30 days')1000,
        payload ,
        payloadType date,
        repeat 3600,
        crontab ,
        once false,
        x 1045.9999923706055,
        y 432.0000219345093,
        wires [
            [
                210701c5.c37cfe
            ]
        ]
    },
    {
        id 210701c5.c37cfe,
        type sqlite,
        z 6d59f1a.522131,
        mydb ba3e9611.084d58,
        name Autodelete,
        x 1213.9999923706055,
        y 433.0000219345093,
        wires [
            [
                fd473389.ad242
            ]
        ]
    },
    {
        id fd473389.ad242,
        type debug,
        z 6d59f1a.522131,
        name ,
        active true,
        console false,
        complete false,
        x 1388.9999923706055,
        y 437.0000219345093,
        wires []
    },
    {
        id 53d1c218.9f0e9c,
        type function,
        z 6d59f1a.522131,
        name Store state,
        func var state = context.get('state')  false;nnif (msg.topic == 'switch') {n    state = msg.payload;n    context.set('state', state);n}nnreturn {payload state};n,
        outputs 1,
        noerr 0,
        x 338.1000061035156,
        y 589.0000085830688,
        wires [
            [
                eaddb61c.071e78,
                29c0fad0.5b2366
            ]
        ]
    },
    {
        id 662c0a65.7369a4,
        type function,
        z 6d59f1a.522131,
        name Store state,
        func var state = context.get('state')  false;nnif (msg.topic == 'switch') {n    state = msg.payload;n    context.set('state', state);n}nnreturn {payload state};n,
        outputs 1,
        noerr 0,
        x 1081.0000534057617,
        y 597.0000400543213,
        wires [
            [
                6b913cb9.7caf74,
                cff1d2b8.a12f3
            ]
        ]
    },
    {
        id 369b130e.75ff5c,
        type ui_chart,
        z 6d59f1a.522131,
        name ,
        group 13e6c784.070128,
        order 0,
        width 0,
        height 0,
        label Moisture Voltage [V],
        chartType line,
        legend true,
        xformat HHmmss,
        interpolate linear,
        nodata ,
        ymin ,
        ymax ,
        removeOlder 1,
        removeOlderPoints ,
        removeOlderUnit 86400,
        cutout 0,
        colors [
            #1f77b4,
            #aec7e8,
            #ff7f0e,
            #2ca02c,
            #98df8a,
            #d62728,
            #ff9896,
            #9467bd,
            #c5b0d5
        ],
        x 1103.400047302246,
        y 185.00000476837158,
        wires [
            [],
            []
        ]
    },
    {
        id 44c871d1.ea296,
        type function,
        z 6d59f1a.522131,
        name Generate Moisture Chart Data,
        func var msg1 = { payloadmsg.payload[1], topicmsg.payload[0] };nnreturn msg1;,
        outputs 1,
        noerr 0,
        x 874.5104598999023,
        y 174.28281116485596,
        wires [
            [
                369b130e.75ff5c
            ]
        ]
    },
    {
        id cff1d2b8.a12f3,
        type debug,
        z 6d59f1a.522131,
        name ,
        active false,
        console false,
        complete payload,
        x 1257.0000228881836,
        y 547.0000286102295,
        wires []
    },
    {
        id 29c0fad0.5b2366,
        type debug,
        z 6d59f1a.522131,
        name ,
        active false,
        console false,
        complete payload,
        x 489,
        y 543,
        wires []
    },
    {
        id 2fd62e77.0339c2,
        type mqtt-broker,
        z ,
        broker localhost,
        port 1883,
        clientid ,
        usetls false,
        compatmode true,
        keepalive 60,
        cleansession true,
        willTopic ,
        willQos 0,
        willPayload ,
        birthTopic ,
        birthQos 0,
        birthPayload 
    },
    {
        id 28a5b569.d77cba,
        type mqtt-broker,
        z ,
        broker localhost,
        port 1883,
        clientid ,
        usetls false,
        compatmode true,
        keepalive 60,
        cleansession true,
        willTopic ,
        willQos 0,
        willPayload ,
        birthTopic ,
        birthQos 0,
        birthPayload 
    },
    {
        id ba3e9611.084d58,
        type sqlitedb,
        z ,
        db homepidbsiot.db
    },
    {
        id 13e6c784.070128,
        type ui_group,
        z ,
        name Temperature,
        tab 4ee076c3.476788,
        order 1,
        disp false,
        width 6
    },
    {
        id 3ae508d0.221808,
        type ui_group,
        z ,
        name Pressure,
        tab 4ee076c3.476788,
        order 3,
        disp false,
        width 6
    },
    {
        id f3ee1910.217358,
        type ui_group,
        z ,
        name Status,
        tab 4ee076c3.476788,
        order 5,
        disp false,
        width 6
    },
    {
        id dafef2b4.2f5c4,
        type ui_group,
        z ,
        name Button,
        tab 4ee076c3.476788,
        order 6,
        disp false,
        width 6
    },
    {
        id 47a2bc87.45d204,
        type ui_group,
        z ,
        name Table,
        tab 29a3f648.935d5a,
        order 1,
        disp true,
        width 22
    },
    {
        id 4ee076c3.476788,
        type ui_tab,
        z ,
        name SWAN_SERVER,
        icon dashboard,
        order 1
    },
    {
        id 29a3f648.935d5a,
        type ui_tab,
        z ,
        name Database,
        icon dashboard,
        order 2
    }
]